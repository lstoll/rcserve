user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    resolver 127.0.0.1;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_disable "msie6";

    map $http_upgrade $connection_upgrade {
    	default upgrade;
	'' close;
    }

    proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=STATIC:20m inactive=504h  max_size=50g;

    server {
        listen              0.0.0.0:443 default_server ssl;
	server_name         _;
	ssl_certificate     /etc/ssl/railscamp.cer;
	ssl_certificate_key /etc/ssl/railscamp.key;
    }

    server {
        listen      80;
        server_name _;
        rewrite     ^   https://$host$request_uri? redirect; # or permanent if I'm not gonna mess it up
    }

    server {
        listen      443;
        server_name railscamp.net www.railscamp.net;
        rewrite     ^   https://git.railscamp.net/railscamp/railscamp redirect; # or permanent...
    }

    {% for service in proxy_services %}
    server {
        listen 443;
	server_name {{ service.name }};

	location / {
            proxy_pass http://localhost:{{ service.port }};

	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection $connection_upgrade;
        }
    }
    {% endfor %}

   {% for service in cdn_services %}
    server {
        listen 443;
	server_name {{ service.name }};

	location / {
            proxy_pass {{ service.upstream }};
	    proxy_set_header       Host {{ service.upstream_host }};
            proxy_cache            STATIC;
            proxy_cache_valid      200  21d;
            proxy_cache_use_stale  error timeout invalid_header updating
                                   http_500 http_502 http_503 http_504;
            proxy_intercept_errors on;
            error_page 301 302 307 =200 @redir;
        }

        location @redir {
            proxy_cache STATIC;
	    set $redir_upstream $upstream_http_location;
	    proxy_pass $redir_upstream;
            proxy_cache_valid      200  21d;
            proxy_cache_use_stale  error timeout invalid_header updating
                                   http_500 http_502 http_503 http_504;
        }

    }
    {% endfor %}

    server {
        listen 443;
        server_name photos.railscamp.net;

	root /data/photos/public_html;
	index index.html;

        location / {
	    autoindex on;
	}
    }
}