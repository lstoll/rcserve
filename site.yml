---
- hosts: all
  become: true
  become_user: root
  tasks:
  - name: One apt update to rule them all
    apt: update_cache=yes cache_valid_time=3600
  - name: Install required packages
    apt: name={{item}} state=present
    with_items:
       - postgresql
       - python-psycopg2
       - nginx
       - git-core
       - build-essential
       - ruby-dev
       - nodejs
       - nodejs-legacy
       - bundler
       - apt-cacher-ng
       - dnsmasq
       - rssh
  # Service users
  - user: name={{item}} system=yes home=/srv/{{item}} createhome=yes
    with_items:
      - gogs
      - mattermost
      - geminabox

  # Databass
  - postgresql_db: name={{item}}
    become_user: postgres
    with_items:
      - gogs
      - mattermost
  - postgresql_user: db={{item}} name={{item}} password={{item}}pw encrypted=no priv=ALL
    become_user: postgres
    with_items:
      - gogs
      - mattermost

  # Go, because it's 'rails'camp
  - name: Install golang
    command: bash -c "curl https://storage.googleapis.com/golang/go1.6.linux-amd64.tar.gz | tar -C /usr/local -xz" creates=/usr/local/go/bin/go
  - name: Set up go paths
    copy:
      content: "export GOPATH=/srv/go\nexport PATH=$GOPATH/bin:/usr/local/go/bin:$PATH"
      dest: /etc/profile.d/go.sh

  # Gogs
  - git: repo=https://github.com/gogits/gogs dest=/srv/go/src/github.com/gogits/gogs update=no version=master

  # Go install to compile/fetch deps/that shit.
  - name: Go install things
    command: sh -l -c "/usr/local/go/bin/go get ./... && /usr/local/go/bin/go build ./... && /usr/local/go/bin/go install ./..." chdir={{item}}
    with_items:
      - /srv/go/src/github.com/gogits/gogs

  # Gogs setup
  - name: Run make for gogs
    command: sh -l -c "make" chdir=/srv/go/src/github.com/gogits/gogs
  - name: Gogs config file
    template: src=templates/gogs.ini dest=/srv/go/src/github.com/gogits/gogs/custom/conf/app.ini mode=0644
    notify:
      - restart gogs
  - name: Gogs systemd unit
    template: src=templates/gogs.service dest=/etc/systemd/system/gogs.service
    register: gogs_systemd
    notify:
      - restart gogs

  # Mattermost setup
  - name: Download Mattermost
    get_url: url=https://releases.mattermost.com/3.3.0/mattermost-team-3.3.0-linux-amd64.tar.gz dest=/srv/mattermost/mattermost-3.3.0.tar.gz mode=0444
  - name: Extract mattermost
    unarchive: src=/srv/mattermost/mattermost-3.3.0.tar.gz dest=/srv/mattermost copy=no owner=mattermost creates=/srv/mattermost/mattermost/bin/platform
  - name: create mattermost data dir
    file: path=/srv/mattermost/data state=directory mode=0755 owner=mattermost
  - name: Mattermost config file
    template: src=templates/mattermost.config.json dest=/srv/mattermost/mattermost/config/config.json mode=0644
    notify:
      - restart mattermost
  - name: Mattermost systemd unit
    template: src=templates/mattermost.service dest=/etc/systemd/system/mattermost.service
    register: mattermost_systemd
    notify:
      - restart mattermost

  # Geminabox
  - name: Geminabox Gemfile
    template: src=templates/geminabox.Gemfile dest=/srv/geminabox/Gemfile
  - name: Geminabox rackup
    template: src=templates/geminabox.config.ru dest=/srv/geminabox/config.ru
    notify:
      - restart geminabox
  - name: create geminabox data dir
    file: path=/data/gems state=directory mode=0755 owner=geminabox
  - name: Bootstrap Geminabox
    command: bundle install --path vendor/bundle chdir=/srv/geminabox creates=/srv/geminabox/Gemfile.lock
    become_user: geminabox
    notify:
      - restart geminabox
  - name: Geminabox systemd unit
    template: src=templates/geminabox.service dest=/etc/systemd/system/geminabox.service
    register: geminabox_systemd
    notify:
      - restart geminabox

  # Gem mirroring setup
  - name: Gem mirror code
    git: repo=https://github.com/rubygems/rubygems-mirror dest=/srv/geminabox/mirrorer update=no version=master
    become_user: geminabox
  - name: gem-mirror Gemfile
    template: src=templates/gemmirror.Gemfile dest=/srv/geminabox/mirrorer/Gemfile
  - name: Bootstrap rubygems-mirror
    command: bundle install --path vendor/bundle chdir=/srv/geminabox/mirrorer creates=/srv/geminabox/mirrorer/Gemfile.lock
    become_user: geminabox
  - name: create geminabox .gem dir
    file: path=/srv/geminabox/.gem state=directory mode=0755 owner=geminabox
  - name: Gem mirroring config
    template: src=templates/rubygems-mirror-config.yaml dest=/srv/geminabox/.gem/.mirrorrc

  # Apt cacher
  - name: create apt cache dir
    file: path=/data/apt-cache state=directory mode=0755 owner=apt-cacher-ng
  - name: apt-cacher config
    template: src=templates/acng.conf dest=/etc/apt-cacher-ng/acng.conf
    notify: restart apt-cacher-ng

  # Webserver
  - name: nginx cache dir
    file: path=/data/nginx/cache state=directory mode=0755 owner=www-data
  - name: ssl priv key
    copy: src=sslcerts/certs/railscamp.net/privkey.pem dest=/etc/ssl/railscamp.key owner=root group=root mode=0600
    notify: restart nginx
  - name: ssl chain crt
    copy: src=sslcerts/certs/railscamp.net/fullchain.pem dest=/etc/ssl/railscamp.cer owner=root group=root mode=0600
    notify: restart nginx
  - name: nginx config
    template: src=templates/nginx.conf dest=/etc/nginx/nginx.conf
    notify: restart nginx
    vars:
      proxy_services:
        - name: git.railscamp.net
          port: 3005
        - name: chat.railscamp.net
          port: 8065
        - name: gems.railscamp.net
          port: 9295
        - name: apt.railscamp.net
          port: 4132
      cdn_services:
        - name: brewbottles.railscamp.net
          upstream: https://homebrew.bintray.com
          upstream_host: homebrew.bintray.com


  # Static photos site
  - template: src=templates/rssh.conf dest=/etc/rssh.conf
  # password is: passw0rd
  - user: name=photos home=/data/photos createhome=yes password=$6$LxH5OWrk2CnWqZCQ$f2WW6kXtDEnbu1qIP3J8ATGjVjeY5Tpd8s4I6XZUNOKUGEUEVO9Nq9zVo8loZPLHSCM6sVS3lo2nPTmjA/6bj0 shell=/usr/bin/rssh
  - file: path=/data/photos/public_html state=directory mode=0755 owner=photos group=www-data

  # DNS Entries for dnsmasq
  - name: dnsmasq dns entries
    lineinfile: dest=/etc/hosts regexp='{{item.name}}' line='{{item.ip}} {{item.name}}' owner=root group=root mode=0644
    with_items:
      - { name: "apt.railscamp.net", ip: "172.16.51.250" }
      - { name: "brewbottles.railscamp.net", ip: "172.16.51.250" }
      - { name: "chat.railscamp.net", ip: "172.16.51.250" }
      - { name: "gems.railscamp.net", ip: "172.16.51.250" }
      - { name: "git.railscamp.net", ip: "172.16.51.250" }
      - { name: "npm.railscamp.net", ip: "172.16.51.250" }
      - { name: "photos.railscamp.net", ip: "172.16.51.250" }
      - { name: "railscamp.net", ip: "172.16.51.250" }
      - { name: "rcserve.railscamp.net", ip: "172.16.51.250" }
      - { name: "www.railscamp.net", ip: "172.16.51.250" }

  # Reload systemd units
  - name: notify systemd of service changes
    command: systemctl daemon-reload
    when: (gogs_systemd.changed == True) or
          (mattermost_systemd.changed == True) or
          (geminabox_systemd.changed == true)

  # Start up all the services
  - name: start gogs and set to start on startup
    service: name=gogs state=started enabled=yes
  - name: start mattermost and set to start on startup
    service: name=mattermost state=started enabled=yes
  - name: start geminabox and set to start on startup
    service: name=geminabox state=started enabled=yes

  handlers:
    - name: restart gogs
      service: name=gogs state=restarted
    - name: restart mattermost
      service: name=mattermost state=restarted
    - name: restart geminabox
      service: name=geminabox state=restarted
    - name: restart nginx
      service: name=nginx state=restarted
    - name: restart apt-cacher-ng
      service: name=apt-cacher-ng state=restarted
